#!/usr/bin/env python3from tkinter import *from PIL import ImageTk,Image#change window for outputdef identification_menu():    def switchwindow():        output_window.destroy()        main_window.update()        main_window.deiconify()            def redirector(inputStr):        text_widget.insert(INSERT, inputStr)    output_window = Toplevel(main_window, height=605, width=805, bg='#030B1B', bd=7)    main_window.withdraw()    #define text widget for output    text_widget = Text(output_window, height=32, width=98, bg = "#030B1B", fg = "white",                              highlightbackground = "#00FFFF", highlightcolor= "#00FFFF")    text_widget.place(x=0,y=0)        #redirect any print call to the definition    sys.stdout.write = redirector         #whenever sys.stdout.write is called, redirector is called        #define a scrollbar    scroll_bar = Scrollbar(output_window)    scroll_bar.place(x=775, y=250)        #return button    return_button = Button(output_window, text = "RETURN", bg = "black", fg = "#00FFFF",                            font = ("Helvetica", 20), height = 1, width = 51, bd=0,                            highlightbackground = "#00FFFF", highlightcolor= "#00FFFF", command=switchwindow)    return_button.place(x=0, y=552)#animated background with a gif filedef update(ind):    try:        frame = frames[ind]        ind += 1        if ind == frameCnt:            ind = 0        gif_background.configure(image=frame)        main_window.after(60, update, ind)    except IndexError:        pass    #define switch functiondef switch():    global endless_on    if endless_on:        switch_button.config(image = disabled)        endless_on = False    else:        switch_button.config(image = enabled)        endless_on = True    ## create windowmain_window = Tk()#adjust size of windowmain_window.geometry("800x600")#global switch variableendless_on = True#define imagesenabled = PhotoImage(file = "enabled.png")disabled = PhotoImage(file = "disabled.png")acquire_sequence = PhotoImage(file='acquire_sequence.png')execute_sequence = PhotoImage(file='execute_sequence.png')title = PhotoImage(file="title.png")#show gif animation with a labelframeCnt = 60frames = [PhotoImage(file='background.gif',format = 'gif -index %i' %(i)) for i in range(frameCnt)]gif_background = Label(main_window, bd=0, borderwidth=0, highlightthickness = 0)gif_background.place(x = 0,y = 0)#titlemain_window.title('TRAJECTORY EXPLORER')title_label = Label(image=title, bg='#030B1B')title_label.place(x=110, y=10)#buttonsbutton_acquire = Button(main_window, image=acquire_sequence, bd=0, borderwidth=0, highlightthickness = 0,                                    bg='#030B1B', activebackground='#030B1B', command=identification_menu) button_execute = Button(main_window, image=execute_sequence, bd=0, borderwidth=0, highlightthickness = 0,                                    bg='#030B1B', activebackground='#030B1B', command=identification_menu)switch_button = Button(main_window, image=enabled, bd=0, borderwidth=0, highlightthickness = 0,                                     bg='#030B1B', activebackground='#030B1B', command = switch)button_acquire.place(x=19, y=450)button_execute.place(x=533, y=450)switch_button.place(x=232, y=505)#execute windowmain_window.after(0, update, 0)main_window.mainloop()